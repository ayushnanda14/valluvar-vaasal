rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow public read access to approved testimonials
    match /testimonials/{document} {
      allow read: if resource.data.approved == true;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to read/write their own user data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read/write their own chats
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         resource.data.astrologerId == request.auth.uid ||
         request.auth.token.roles.hasAny(['admin', 'support']));
    }
    
    // Allow authenticated users to read/write their own messages
    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        (resource.data.senderId == request.auth.uid ||
         request.auth.token.roles.hasAny(['admin', 'support']));
    }
    
    // Allow authenticated users to read/write their own payments
    match /payments/{paymentId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         request.auth.token.roles.hasAny(['admin', 'support']));
    }
    
    // Allow authenticated users to read/write their own service requests
    match /serviceRequests/{requestId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         resource.data.astrologerId == request.auth.uid ||
         request.auth.token.roles.hasAny(['admin', 'support']));
    }
    
    // Allow admins to read all documents
    match /{document=**} {
      allow read, write: if request.auth != null && 
        request.auth.token.roles.hasAny(['admin']);
    }
  }
}
